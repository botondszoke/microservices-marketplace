version: '3.4'

services:
  productservice.api:
    image: ${DOCKER_REGISTRY-}productserviceapi
    container_name: ProductService.API
    networks:
      - web
      - backend
    build:
      context: .
      dockerfile: ProductService.API/Dockerfile
    depends_on:
      - mongodb_container_product

  mongodb_container_product:
    image: mongo:5.0
    container_name: product-db
    networks:
      - backend
    ports:
      - 27017:27017

  saleservice.api:
    image: ${DOCKER_REGISTRY-}saleserviceapi
    container_name: SaleService.API
    networks:
      - web
      - backend
    build:
      context: .
      dockerfile: SaleService.API/Dockerfile
    depends_on:
      - mongodb_container_sale
  
  mongodb_container_sale:
    image: mongo:5.0
    container_name: sale-db
    networks:
      - backend
    ports: 
      - 27018:27017
  
  traefik-gateway:
    image: traefik:v2.6
    container_name: traefik-gateway
    networks:
      - web
  
  traefik-forward-auth:
    image: mesosphere/traefik-forward-auth:3.1.0
    container_name: traefik-forward-auth
    environment:
      - CLIENT_ID=buyte-backend #<your keycloak client name>
      - CLIENT_SECRET=SSEGEb4is6W5hGlJvpDDKpTZtriVbIEA #<your keycloak client secret>
      - PROVIDER_URI=http://keycloak.localhost:8080/auth/realms/buyte #OIDC_ISSUER=http://keycloak.localhost/auth/realms/buyte
      - SECRET=secretSECRET
      - INSECURE_COOKIE=true
      - LOG_LEVEL=debug
      - AUTH_HOST=auth.localhost
      - COOKIE_DOMAIN=localhost 
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.forwardauth.loadbalancer.server.port=4181"
      - "traefik.http.routers.forwardauth.entrypoints=web"
      
      #- "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=80" #4181
      #- "traefik.http.services.traefik-forward-auth.loadbalancer.passhostheader=false"
      ##- "traefik.http.routers.forwardauth.entrypoints=web"
      - "traefik.http.routers.forwardauth.rule=Host(`auth.localhost`) && Path(`/_oauth`)"
      - "traefik.http.routers.forwardauth.middlewares=traefik-forward-auth"
      
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.trustForwardHeader=true"
    networks:
      - web

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    container_name: whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"
    networks:
      - web

  keycloak.localhost:
    image: jboss/keycloak:16.1.1
    container_name: keycloak
    ports:
      - 8081:8080
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=K3ycloak4dmin
      - DB_VENDOR=postgres
      - DB_ADDR=auth-db
      - DB_DATABASE=postgres
      - DB_USER=postgres
      - DB_PASSWORD=P05tgre5pw
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_HOSTNAME=keycloak.localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.routers.keycloak_auth.rule=Host(`keycloak.localhost`)"
      - "traefik.http.routers.keycloak_auth.entrypoints=traefik"
      #- "traefik.http.routers.keycloak.entrypoints=traefik"
      #- "traefik.http.routers.keycloak.middlewares=test-redirectregex"
      #- "traefik.http.middlewares.test-redirectregex.redirectregex.regex=^http://keycloak:8080/(.*)"
      #- "traefik.http.middlewares.test-redirectregex.redirectregex.replacement=http://keycloak.localhost/$${1}"
    networks:
      - web
      - backend
    depends_on:
      - postgres
  
  postgres:
    image: postgres:14.2
    container_name: auth-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P05tgre5pw
    volumes:
      - postgres_vol:/var/lib/postgresql/data
    networks:
      - backend
networks:
  web:
    external: false
    name: web
  backend:
    external: false
    name: backend

volumes:
  postgres_vol:
    external: false
    name: postgres_vol

